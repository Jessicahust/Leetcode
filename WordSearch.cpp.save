#include<vector>
#include<string>
#include<iostream>
using namespace std;

class Solution {
public:
    bool exist(vector<vector<char> > &board, string word) {
        if(word.empty())
            return true;
        if(board.empty()||board[0].empty())
            return false;
        int row=board.size();
        int col=board[0].size();
        int i;
        int j;
        for(i=0;i<row;i++)
        {
            for(j=0;j<col;j++)
            {
                if(word[0]==board[i][j]&&dfs(word,i,j,0,board))
                    return true;
            }
        }
        return false;
    }
    bool dfs(string word,int row,int col,int index,vector<vector<char> > &board)
    {
        char c=board[i][j];
        board[i][j]='#';
        if(index>=word.size())
            return true;
        if(row-1>=0&&board[row][col]==word[index])
            return dfs(word,row-1,col,index+1,board);
        if(row+1<board.size()&&board[row][col]==word[index])
            retu
        
    }
};
